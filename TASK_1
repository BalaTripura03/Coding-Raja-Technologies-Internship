import json
import os
from datetime import datetime

# Define the file to store tasks
TASKS_FILE = 'tasks.json'

# Function to load tasks from file
def load_tasks():
    if os.path.exists(TASKS_FILE):
        with open(TASKS_FILE, 'r') as file:
            return json.load(file)
    return []

# Function to save tasks to file
def save_tasks(tasks):
    with open(TASKS_FILE, 'w') as file:
        json.dump(tasks, file, indent=4)

# Function to add a task
def add_task(tasks):
    name = input("Enter task name: ")
    priority = input("Enter task priority (high, medium, low): ")
    due_date = input("Enter task due date (YYYY-MM-DD): ")
    task = {
        'name': name,
        'priority': priority,
        'due_date': due_date,
        'completed': False
    }
    tasks.append(task)
    save_tasks(tasks)
    print("Task added successfully.")

# Function to remove a task
def remove_task(tasks):
    task_name = input("Enter the name of the task to remove: ")
    tasks = [task for task in tasks if task['name'] != task_name]
    save_tasks(tasks)
    print("Task removed successfully.")

# Function to mark a task as completed
def complete_task(tasks):
    task_name = input("Enter the name of the task to mark as completed: ")
    for task in tasks:
        if task['name'] == task_name:
            task['completed'] = True
            break
    save_tasks(tasks)
    print("Task marked as completed.")

# Function to display tasks
def display_tasks(tasks):
    print("\nTo-Do List:")
    for task in tasks:
        status = "Completed" if task['completed'] else "Pending"
        print(f"Name: {task['name']}, Priority: {task['priority']}, Due Date: {task['due_date']}, Status: {status}")

# Main function to run the to-do list application
def main():
    tasks = load_tasks()
    
    while True:
        print("\nTo-Do List Application")
        print("1. Add Task")
        print("2. Remove Task")
        print("3. Mark Task as Completed")
        print("4. Display Tasks")
        print("5. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            add_task(tasks)
        elif choice == '2':
            remove_task(tasks)
        elif choice == '3':
            complete_task(tasks)
        elif choice == '4':
            display_tasks(tasks)
        elif choice == '5':
            break
        else:
            print("Invalid option, please try again.")

if __name__ == "__main__":
    main()
